{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-split-pane.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\r\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\r\n\r\nconst splitPaneIosCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:0.55px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-250, #c8c7cc)));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\r\n\r\nconst splitPaneMdCss = \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-side),:host(.split-pane-visible) ::slotted(.split-pane-main){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none !important;box-shadow:none !important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:1px solid var(--ion-item-border-color, var(--ion-border-color, var(--ion-color-step-150, rgba(0, 0, 0, 0.13))));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:0;border-right:var(--border);border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side){border-left:unset;border-right:unset;-webkit-border-start:0;border-inline-start:0;-webkit-border-end:var(--border);border-inline-end:var(--border)}}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:var(--border);border-right:0;border-top:0;border-bottom:0;min-width:var(--side-min-width);max-width:var(--side-max-width)}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){border-left:unset;border-right:unset;-webkit-border-start:var(--border);border-inline-start:var(--border);-webkit-border-end:0;border-inline-end:0}}\";\r\n\r\nconst SPLIT_PANE_MAIN = 'split-pane-main';\r\nconst SPLIT_PANE_SIDE = 'split-pane-side';\r\nconst QUERY = {\r\n  'xs': '(min-width: 0px)',\r\n  'sm': '(min-width: 576px)',\r\n  'md': '(min-width: 768px)',\r\n  'lg': '(min-width: 992px)',\r\n  'xl': '(min-width: 1200px)',\r\n  'never': ''\r\n};\r\nconst SplitPane = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\r\n    this.visible = false;\r\n    /**\r\n     * If `true`, the split pane will be hidden.\r\n     */\r\n    this.disabled = false;\r\n    /**\r\n     * When the split-pane should be shown.\r\n     * Can be a CSS media query expression, or a shortcut expression.\r\n     * Can also be a boolean expression.\r\n     */\r\n    this.when = QUERY['lg'];\r\n  }\r\n  visibleChanged(visible) {\r\n    const detail = { visible, isPane: this.isPane.bind(this) };\r\n    this.ionSplitPaneVisible.emit(detail);\r\n  }\r\n  connectedCallback() {\r\n    this.styleChildren();\r\n    this.updateState();\r\n  }\r\n  disconnectedCallback() {\r\n    if (this.rmL) {\r\n      this.rmL();\r\n      this.rmL = undefined;\r\n    }\r\n  }\r\n  updateState() {\r\n    if (this.rmL) {\r\n      this.rmL();\r\n      this.rmL = undefined;\r\n    }\r\n    // Check if the split-pane is disabled\r\n    if (this.disabled) {\r\n      this.visible = false;\r\n      return;\r\n    }\r\n    // When query is a boolean\r\n    const query = this.when;\r\n    if (typeof query === 'boolean') {\r\n      this.visible = query;\r\n      return;\r\n    }\r\n    // When query is a string, let's find first if it is a shortcut\r\n    const mediaQuery = QUERY[query] || query;\r\n    // Media query is empty or null, we hide it\r\n    if (mediaQuery.length === 0) {\r\n      this.visible = false;\r\n      return;\r\n    }\r\n    if (window.matchMedia) {\r\n      // Listen on media query\r\n      const callback = (q) => {\r\n        this.visible = q.matches;\r\n      };\r\n      const mediaList = window.matchMedia(mediaQuery);\r\n      mediaList.addListener(callback);\r\n      this.rmL = () => mediaList.removeListener(callback);\r\n      this.visible = mediaList.matches;\r\n    }\r\n  }\r\n  isPane(element) {\r\n    if (!this.visible) {\r\n      return false;\r\n    }\r\n    return element.parentElement === this.el\r\n      && element.classList.contains(SPLIT_PANE_SIDE);\r\n  }\r\n  styleChildren() {\r\n    const contentId = this.contentId;\r\n    const children = this.el.children;\r\n    const nu = this.el.childElementCount;\r\n    let foundMain = false;\r\n    for (let i = 0; i < nu; i++) {\r\n      const child = children[i];\r\n      const isMain = contentId !== undefined && child.id === contentId;\r\n      if (isMain) {\r\n        if (foundMain) {\r\n          console.warn('split pane cannot have more than one main node');\r\n          return;\r\n        }\r\n        foundMain = true;\r\n      }\r\n      setPaneClass(child, isMain);\r\n    }\r\n    if (!foundMain) {\r\n      console.warn('split pane does not have a specified main node');\r\n    }\r\n  }\r\n  render() {\r\n    const mode = getIonMode(this);\r\n    return (h(Host, { class: {\r\n        [mode]: true,\r\n        // Used internally for styling\r\n        [`split-pane-${mode}`]: true,\r\n        'split-pane-visible': this.visible\r\n      } }, h(\"slot\", null)));\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"visible\": [\"visibleChanged\"],\r\n    \"disabled\": [\"updateState\"],\r\n    \"when\": [\"updateState\"]\r\n  }; }\r\n};\r\nconst setPaneClass = (el, isMain) => {\r\n  let toAdd;\r\n  let toRemove;\r\n  if (isMain) {\r\n    toAdd = SPLIT_PANE_MAIN;\r\n    toRemove = SPLIT_PANE_SIDE;\r\n  }\r\n  else {\r\n    toAdd = SPLIT_PANE_SIDE;\r\n    toRemove = SPLIT_PANE_MAIN;\r\n  }\r\n  const classList = el.classList;\r\n  classList.add(toAdd);\r\n  classList.remove(toRemove);\r\n};\r\nSplitPane.style = {\r\n  ios: splitPaneIosCss,\r\n  md: splitPaneMdCss\r\n};\r\n\r\nexport { SplitPane as ion_split_pane };\r\n"],"sourceRoot":"webpack:///","file":"35-es5.js"}