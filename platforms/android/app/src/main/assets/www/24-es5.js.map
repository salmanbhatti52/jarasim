{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-radio_2.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\r\nimport { b as getIonMode } from './ionic-global-63a97a32.js';\r\nimport { a as addEventListener, b as removeEventListener, d as getAriaLabel } from './helpers-1457892a.js';\r\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\r\n\r\nconst radioIosCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}:host(:focus){outline:none}:host{--color-checked:var(--ion-color-primary, #3880ff);width:15px;height:24px}:host(.ion-color.radio-checked) .radio-inner{border-color:var(--ion-color-base)}.item-radio.item-ios ion-label{margin-left:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.item-radio.item-ios ion-label{margin-left:unset;-webkit-margin-start:0;margin-inline-start:0}}.radio-inner{width:33%;height:50%}:host(.radio-checked) .radio-inner{-webkit-transform:rotate(45deg);transform:rotate(45deg);border-width:2px;border-top-width:0;border-left-width:0;border-style:solid;border-color:var(--color-checked)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-9px;top:-8px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-9px}:host(.in-item){margin-left:10px;margin-right:11px;margin-top:8px;margin-bottom:8px;display:block;position:static}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item){margin-left:unset;margin-right:unset;-webkit-margin-start:10px;margin-inline-start:10px;-webkit-margin-end:11px;margin-inline-end:11px}}:host(.in-item[slot=start]){margin-left:3px;margin-right:21px;margin-top:8px;margin-bottom:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:3px;margin-inline-start:3px;-webkit-margin-end:21px;margin-inline-end:21px}}\";\r\n\r\nconst radioMdCss = \":host{--inner-border-radius:50%;display:inline-block;position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.radio-disabled){pointer-events:none}.radio-icon{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;contain:layout size style}.radio-icon,.radio-inner{-webkit-box-sizing:border-box;box-sizing:border-box}label{left:0;top:0;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;position:absolute;width:100%;height:100%;border:0;background:transparent;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;outline:none;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;opacity:0}[dir=rtl] label,:host-context([dir=rtl]) label{left:unset;right:unset;right:0}label::-moz-focus-inner{border:0}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}:host(:focus){outline:none}:host{--color:var(--ion-color-step-400, #999999);--color-checked:var(--ion-color-primary, #3880ff);--border-width:2px;--border-style:solid;--border-radius:50%;width:20px;height:20px}:host(.ion-color) .radio-inner{background:var(--ion-color-base)}:host(.ion-color.radio-checked) .radio-icon{border-color:var(--ion-color-base)}.radio-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;border-radius:var(--border-radius);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--color)}.radio-inner{border-radius:var(--inner-border-radius);width:calc(50% + var(--border-width));height:calc(50% + var(--border-width));-webkit-transform:scale3d(0, 0, 0);transform:scale3d(0, 0, 0);-webkit-transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:-webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1);transition:transform 280ms cubic-bezier(0.4, 0, 0.2, 1), -webkit-transform 280ms cubic-bezier(0.4, 0, 0.2, 1);background:var(--color-checked)}:host(.radio-checked) .radio-icon{border-color:var(--color-checked)}:host(.radio-checked) .radio-inner{-webkit-transform:scale3d(1, 1, 1);transform:scale3d(1, 1, 1)}:host(.radio-disabled){opacity:0.3}:host(.ion-focused) .radio-icon::after{border-radius:var(--inner-border-radius);left:-12px;top:-12px;display:block;position:absolute;width:36px;height:36px;background:var(--ion-color-primary-tint, #4c8dff);content:\\\"\\\";opacity:0.2}:host-context([dir=rtl]):host(.ion-focused) .radio-icon::after,:host-context([dir=rtl]).ion-focused .radio-icon::after{left:unset;right:unset;right:-12px}:host(.in-item){margin-left:0;margin-right:0;margin-top:9px;margin-bottom:9px;display:block;position:static}:host(.in-item[slot=start]){margin-left:4px;margin-right:36px;margin-top:11px;margin-bottom:10px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-item[slot=start]){margin-left:unset;margin-right:unset;-webkit-margin-start:4px;margin-inline-start:4px;-webkit-margin-end:36px;margin-inline-end:36px}}\";\r\n\r\nconst Radio = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\r\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\r\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\r\n    this.inputId = `ion-rb-${radioButtonIds++}`;\r\n    this.radioGroup = null;\r\n    /**\r\n     * If `true`, the radio is selected.\r\n     */\r\n    this.checked = false;\r\n    /**\r\n     * The tabindex of the radio button.\r\n     * @internal\r\n     */\r\n    this.buttonTabindex = -1;\r\n    /**\r\n     * The name of the control, which is submitted with the form data.\r\n     */\r\n    this.name = this.inputId;\r\n    /**\r\n     * If `true`, the user cannot interact with the radio.\r\n     */\r\n    this.disabled = false;\r\n    this.updateState = () => {\r\n      if (this.radioGroup) {\r\n        this.checked = this.radioGroup.value === this.value;\r\n      }\r\n    };\r\n    this.onFocus = () => {\r\n      this.ionFocus.emit();\r\n    };\r\n    this.onBlur = () => {\r\n      this.ionBlur.emit();\r\n    };\r\n  }\r\n  /** @internal */\r\n  async setFocus(ev) {\r\n    ev.stopPropagation();\r\n    ev.preventDefault();\r\n    this.el.focus();\r\n  }\r\n  /** @internal */\r\n  async setButtonTabindex(value) {\r\n    this.buttonTabindex = value;\r\n  }\r\n  connectedCallback() {\r\n    if (this.value === undefined) {\r\n      this.value = this.inputId;\r\n    }\r\n    const radioGroup = this.radioGroup = this.el.closest('ion-radio-group');\r\n    if (radioGroup) {\r\n      this.updateState();\r\n      addEventListener(radioGroup, 'ionChange', this.updateState);\r\n    }\r\n  }\r\n  disconnectedCallback() {\r\n    const radioGroup = this.radioGroup;\r\n    if (radioGroup) {\r\n      removeEventListener(radioGroup, 'ionChange', this.updateState);\r\n      this.radioGroup = null;\r\n    }\r\n  }\r\n  componentWillLoad() {\r\n    this.emitStyle();\r\n  }\r\n  emitStyle() {\r\n    this.ionStyle.emit({\r\n      'radio-checked': this.checked,\r\n      'interactive-disabled': this.disabled,\r\n    });\r\n  }\r\n  render() {\r\n    const { inputId, disabled, checked, color, el, buttonTabindex } = this;\r\n    const mode = getIonMode(this);\r\n    const { label, labelId, labelText } = getAriaLabel(el, inputId);\r\n    return (h(Host, { \"aria-checked\": `${checked}`, \"aria-hidden\": disabled ? 'true' : null, \"aria-labelledby\": label ? labelId : null, role: \"radio\", tabindex: buttonTabindex, onFocus: this.onFocus, onBlur: this.onBlur, class: createColorClasses(color, {\r\n        [mode]: true,\r\n        'in-item': hostContext('ion-item', el),\r\n        'interactive': true,\r\n        'radio-checked': checked,\r\n        'radio-disabled': disabled,\r\n      }) }, h(\"div\", { class: \"radio-icon\", part: \"container\" }, h(\"div\", { class: \"radio-inner\", part: \"mark\" }), h(\"div\", { class: \"radio-ripple\" })), h(\"label\", { htmlFor: inputId }, labelText), h(\"input\", { type: \"radio\", checked: checked, disabled: disabled, tabindex: \"-1\", id: inputId })));\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"color\": [\"emitStyle\"],\r\n    \"checked\": [\"emitStyle\"],\r\n    \"disabled\": [\"emitStyle\"]\r\n  }; }\r\n};\r\nlet radioButtonIds = 0;\r\nRadio.style = {\r\n  ios: radioIosCss,\r\n  md: radioMdCss\r\n};\r\n\r\nconst RadioGroup = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionChange = createEvent(this, \"ionChange\", 7);\r\n    this.inputId = `ion-rg-${radioGroupIds++}`;\r\n    this.labelId = `${this.inputId}-lbl`;\r\n    /**\r\n     * If `true`, the radios can be deselected.\r\n     */\r\n    this.allowEmptySelection = false;\r\n    /**\r\n     * The name of the control, which is submitted with the form data.\r\n     */\r\n    this.name = this.inputId;\r\n    this.setRadioTabindex = (value) => {\r\n      const radios = this.getRadios();\r\n      // Get the first radio that is not disabled and the checked one\r\n      const first = radios.find(radio => !radio.disabled);\r\n      const checked = radios.find(radio => (radio.value === value && !radio.disabled));\r\n      if (!first && !checked) {\r\n        return;\r\n      }\r\n      // If an enabled checked radio exists, set it to be the focusable radio\r\n      // otherwise we default to focus the first radio\r\n      const focusable = checked || first;\r\n      for (const radio of radios) {\r\n        const tabindex = radio === focusable ? 0 : -1;\r\n        radio.setButtonTabindex(tabindex);\r\n      }\r\n    };\r\n    this.onClick = (ev) => {\r\n      ev.preventDefault();\r\n      const selectedRadio = ev.target && ev.target.closest('ion-radio');\r\n      if (selectedRadio) {\r\n        const currentValue = this.value;\r\n        const newValue = selectedRadio.value;\r\n        if (newValue !== currentValue) {\r\n          this.value = newValue;\r\n        }\r\n        else if (this.allowEmptySelection) {\r\n          this.value = undefined;\r\n        }\r\n      }\r\n    };\r\n  }\r\n  valueChanged(value) {\r\n    this.setRadioTabindex(value);\r\n    this.ionChange.emit({ value });\r\n  }\r\n  componentDidLoad() {\r\n    this.setRadioTabindex(this.value);\r\n  }\r\n  async connectedCallback() {\r\n    // Get the list header if it exists and set the id\r\n    // this is used to set aria-labelledby\r\n    const header = this.el.querySelector('ion-list-header') || this.el.querySelector('ion-item-divider');\r\n    if (header) {\r\n      const label = this.label = header.querySelector('ion-label');\r\n      if (label) {\r\n        this.labelId = label.id = this.name + '-lbl';\r\n      }\r\n    }\r\n  }\r\n  getRadios() {\r\n    return Array.from(this.el.querySelectorAll('ion-radio'));\r\n  }\r\n  onKeydown(ev) {\r\n    const inSelectPopover = !!this.el.closest('ion-select-popover');\r\n    if (ev.target && !this.el.contains(ev.target)) {\r\n      return;\r\n    }\r\n    // Get all radios inside of the radio group and then\r\n    // filter out disabled radios since we need to skip those\r\n    const radios = this.getRadios().filter(radio => !radio.disabled);\r\n    // Only move the radio if the current focus is in the radio group\r\n    if (ev.target && radios.includes(ev.target)) {\r\n      const index = radios.findIndex(radio => radio === ev.target);\r\n      const current = radios[index];\r\n      let next;\r\n      // If hitting arrow down or arrow right, move to the next radio\r\n      // If we're on the last radio, move to the first radio\r\n      if (['ArrowDown', 'ArrowRight'].includes(ev.code)) {\r\n        next = (index === radios.length - 1)\r\n          ? radios[0]\r\n          : radios[index + 1];\r\n      }\r\n      // If hitting arrow up or arrow left, move to the previous radio\r\n      // If we're on the first radio, move to the last radio\r\n      if (['ArrowUp', 'ArrowLeft'].includes(ev.code)) {\r\n        next = (index === 0)\r\n          ? radios[radios.length - 1]\r\n          : radios[index - 1];\r\n      }\r\n      if (next && radios.includes(next)) {\r\n        next.setFocus(ev);\r\n        if (!inSelectPopover) {\r\n          this.value = next.value;\r\n        }\r\n      }\r\n      // Update the radio group value when a user presses the\r\n      // space bar on top of a selected radio\r\n      if (['Space'].includes(ev.code)) {\r\n        this.value = (this.allowEmptySelection && this.value !== undefined)\r\n          ? undefined\r\n          : current.value;\r\n        // Prevent browsers from jumping\r\n        // to the bottom of the screen\r\n        ev.preventDefault();\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    const { label, labelId } = this;\r\n    const mode = getIonMode(this);\r\n    return (h(Host, { role: \"radiogroup\", \"aria-labelledby\": label ? labelId : null, onClick: this.onClick, class: mode }));\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"value\": [\"valueChanged\"]\r\n  }; }\r\n};\r\nlet radioGroupIds = 0;\r\n\r\nexport { Radio as ion_radio, RadioGroup as ion_radio_group };\r\n"],"sourceRoot":"webpack:///","file":"24-es5.js"}