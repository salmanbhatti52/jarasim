{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-menu_3.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, e as createEvent, h, H as Host, i as getElement } from './index-7a8b7a1c.js';\r\nimport { c as config, b as getIonMode } from './ionic-global-63a97a32.js';\r\nimport { g as getTimeGivenProgression } from './cubic-bezier-eea9a7a9.js';\r\nimport { G as GESTURE_CONTROLLER } from './gesture-controller-31cb6bb9.js';\r\nimport { m as isEndSide, i as inheritAttributes, l as assert, j as clamp } from './helpers-dd7e4b7b.js';\r\nimport { m as menuController } from './index-0d58a5bf.js';\r\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\r\nimport './hardware-back-button-4a6b37fb.js';\r\nimport './animation-096c6391.js';\r\n\r\nconst menuIosCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-push){z-index:1000}:host(.menu-type-push) .show-backdrop{display:block}\";\r\n\r\nconst menuMdCss = \":host{--width:304px;--min-width:auto;--max-width:auto;--height:100%;--min-height:auto;--max-height:auto;--background:var(--ion-background-color, #fff);left:0;right:0;top:0;bottom:0;display:none;position:absolute;contain:strict}:host(.show-menu){display:block}.menu-inner{left:0;right:auto;top:0;bottom:0;-webkit-transform:translate3d(-9999px,  0,  0);transform:translate3d(-9999px,  0,  0);display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between;width:var(--width);min-width:var(--min-width);max-width:var(--max-width);height:var(--height);min-height:var(--min-height);max-height:var(--max-height);background:var(--background);contain:strict}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{left:unset;right:unset;left:auto;right:0}[dir=rtl] .menu-inner,:host-context([dir=rtl]) .menu-inner{-webkit-transform:translate3d(calc(-1 * -9999px),  0,  0);transform:translate3d(calc(-1 * -9999px),  0,  0)}:host(.menu-side-start) .menu-inner{--ion-safe-area-right:0px;right:auto;left:0}:host(.menu-side-end) .menu-inner{--ion-safe-area-left:0px;right:0;left:auto;}ion-backdrop{display:none;opacity:0.01;z-index:-1}@media (max-width: 340px){.menu-inner{--width:264px}}:host(.menu-type-reveal){z-index:0}:host(.menu-type-reveal.show-menu) .menu-inner{-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0)}:host(.menu-type-overlay){z-index:1000}:host(.menu-type-overlay) .show-backdrop{display:block;cursor:pointer}:host(.menu-pane-visible){width:var(--width);min-width:var(--min-width);max-width:var(--max-width)}:host(.menu-pane-visible) .menu-inner{left:0;right:0;width:auto;-webkit-transform:none !important;transform:none !important;-webkit-box-shadow:none !important;box-shadow:none !important}:host(.menu-pane-visible) ion-backdrop{display:hidden !important;}:host(.menu-type-overlay) .menu-inner{-webkit-box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18);box-shadow:4px 0px 16px rgba(0, 0, 0, 0.18)}\";\r\n\r\nconst iosEasing = 'cubic-bezier(0.32,0.72,0,1)';\r\nconst mdEasing = 'cubic-bezier(0.0,0.0,0.2,1)';\r\nconst iosEasingReverse = 'cubic-bezier(1, 0, 0.68, 0.28)';\r\nconst mdEasingReverse = 'cubic-bezier(0.4, 0, 0.6, 1)';\r\nconst focusableQueryString = '[tabindex]:not([tabindex^=\"-\"]), input:not([type=hidden]):not([tabindex^=\"-\"]), textarea:not([tabindex^=\"-\"]), button:not([tabindex^=\"-\"]), select:not([tabindex^=\"-\"]), .ion-focusable:not([tabindex^=\"-\"])';\r\nconst Menu = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionWillOpen = createEvent(this, \"ionWillOpen\", 7);\r\n    this.ionWillClose = createEvent(this, \"ionWillClose\", 7);\r\n    this.ionDidOpen = createEvent(this, \"ionDidOpen\", 7);\r\n    this.ionDidClose = createEvent(this, \"ionDidClose\", 7);\r\n    this.ionMenuChange = createEvent(this, \"ionMenuChange\", 7);\r\n    this.lastOnEnd = 0;\r\n    this.blocker = GESTURE_CONTROLLER.createBlocker({ disableScroll: true });\r\n    this.isAnimating = false;\r\n    this._isOpen = false;\r\n    this.inheritedAttributes = {};\r\n    this.handleFocus = (ev) => this.trapKeyboardFocus(ev, document);\r\n    this.isPaneVisible = false;\r\n    this.isEndSide = false;\r\n    /**\r\n     * If `true`, the menu is disabled.\r\n     */\r\n    this.disabled = false;\r\n    /**\r\n     * Which side of the view the menu should be placed.\r\n     */\r\n    this.side = 'start';\r\n    /**\r\n     * If `true`, swiping the menu is enabled.\r\n     */\r\n    this.swipeGesture = true;\r\n    /**\r\n     * The edge threshold for dragging the menu open.\r\n     * If a drag/swipe happens over this value, the menu is not triggered.\r\n     */\r\n    this.maxEdgeStart = 50;\r\n  }\r\n  typeChanged(type, oldType) {\r\n    const contentEl = this.contentEl;\r\n    if (contentEl) {\r\n      if (oldType !== undefined) {\r\n        contentEl.classList.remove(`menu-content-${oldType}`);\r\n      }\r\n      contentEl.classList.add(`menu-content-${type}`);\r\n      contentEl.removeAttribute('style');\r\n    }\r\n    if (this.menuInnerEl) {\r\n      // Remove effects of previous animations\r\n      this.menuInnerEl.removeAttribute('style');\r\n    }\r\n    this.animation = undefined;\r\n  }\r\n  disabledChanged() {\r\n    this.updateState();\r\n    this.ionMenuChange.emit({\r\n      disabled: this.disabled,\r\n      open: this._isOpen\r\n    });\r\n  }\r\n  sideChanged() {\r\n    this.isEndSide = isEndSide(this.side);\r\n  }\r\n  swipeGestureChanged() {\r\n    this.updateState();\r\n  }\r\n  async connectedCallback() {\r\n    if (this.type === undefined) {\r\n      this.type = config.get('menuType', 'overlay');\r\n    }\r\n    const el = this.el;\r\n    const parent = el.parentNode;\r\n    if (this.contentId === undefined) {\r\n      console.warn(`[DEPRECATED][ion-menu] Using the [main] attribute is deprecated, please use the \"contentId\" property instead:\r\nBEFORE:\r\n  <ion-menu>...</ion-menu>\r\n  <div main>...</div>\r\n\r\nAFTER:\r\n  <ion-menu contentId=\"main-content\"></ion-menu>\r\n  <div id=\"main-content\">...</div>\r\n`);\r\n    }\r\n    const content = this.contentId !== undefined\r\n      ? document.getElementById(this.contentId)\r\n      : parent && parent.querySelector && parent.querySelector('[main]');\r\n    if (!content || !content.tagName) {\r\n      // requires content element\r\n      console.error('Menu: must have a \"content\" element to listen for drag events on.');\r\n      return;\r\n    }\r\n    this.contentEl = content;\r\n    // add menu's content classes\r\n    content.classList.add('menu-content');\r\n    this.typeChanged(this.type, undefined);\r\n    this.sideChanged();\r\n    // register this menu with the app's menu controller\r\n    menuController._register(this);\r\n    this.gesture = (await import('./index-34cb2743.js')).createGesture({\r\n      el: document,\r\n      gestureName: 'menu-swipe',\r\n      gesturePriority: 30,\r\n      threshold: 10,\r\n      blurOnStart: true,\r\n      canStart: ev => this.canStart(ev),\r\n      onWillStart: () => this.onWillStart(),\r\n      onStart: () => this.onStart(),\r\n      onMove: ev => this.onMove(ev),\r\n      onEnd: ev => this.onEnd(ev),\r\n    });\r\n    this.updateState();\r\n  }\r\n  componentWillLoad() {\r\n    this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);\r\n  }\r\n  async componentDidLoad() {\r\n    this.ionMenuChange.emit({ disabled: this.disabled, open: this._isOpen });\r\n    this.updateState();\r\n  }\r\n  disconnectedCallback() {\r\n    this.blocker.destroy();\r\n    menuController._unregister(this);\r\n    if (this.animation) {\r\n      this.animation.destroy();\r\n    }\r\n    if (this.gesture) {\r\n      this.gesture.destroy();\r\n      this.gesture = undefined;\r\n    }\r\n    this.animation = undefined;\r\n    this.contentEl = this.backdropEl = this.menuInnerEl = undefined;\r\n  }\r\n  onSplitPaneChanged(ev) {\r\n    this.isPaneVisible = ev.detail.isPane(this.el);\r\n    this.updateState();\r\n  }\r\n  onBackdropClick(ev) {\r\n    if (this._isOpen && this.lastOnEnd < ev.timeStamp - 100) {\r\n      const shouldClose = (ev.composedPath)\r\n        ? !ev.composedPath().includes(this.menuInnerEl)\r\n        : false;\r\n      if (shouldClose) {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        this.close();\r\n      }\r\n    }\r\n  }\r\n  onKeydown(ev) {\r\n    if (ev.key === 'Escape') {\r\n      this.close();\r\n    }\r\n  }\r\n  /**\r\n   * Returns `true` is the menu is open.\r\n   */\r\n  isOpen() {\r\n    return Promise.resolve(this._isOpen);\r\n  }\r\n  /**\r\n   * Returns `true` is the menu is active.\r\n   *\r\n   * A menu is active when it can be opened or closed, meaning it's enabled\r\n   * and it's not part of a `ion-split-pane`.\r\n   */\r\n  isActive() {\r\n    return Promise.resolve(this._isActive());\r\n  }\r\n  /**\r\n   * Opens the menu. If the menu is already open or it can't be opened,\r\n   * it returns `false`.\r\n   */\r\n  open(animated = true) {\r\n    return this.setOpen(true, animated);\r\n  }\r\n  /**\r\n   * Closes the menu. If the menu is already closed or it can't be closed,\r\n   * it returns `false`.\r\n   */\r\n  close(animated = true) {\r\n    return this.setOpen(false, animated);\r\n  }\r\n  /**\r\n   * Toggles the menu. If the menu is already open, it will try to close, otherwise it will try to open it.\r\n   * If the operation can't be completed successfully, it returns `false`.\r\n   */\r\n  toggle(animated = true) {\r\n    return this.setOpen(!this._isOpen, animated);\r\n  }\r\n  /**\r\n   * Opens or closes the button.\r\n   * If the operation can't be completed successfully, it returns `false`.\r\n   */\r\n  setOpen(shouldOpen, animated = true) {\r\n    return menuController._setOpen(this, shouldOpen, animated);\r\n  }\r\n  focusFirstDescendant() {\r\n    const { el } = this;\r\n    const firstInput = el.querySelector(focusableQueryString);\r\n    if (firstInput) {\r\n      firstInput.focus();\r\n    }\r\n    else {\r\n      el.focus();\r\n    }\r\n  }\r\n  focusLastDescendant() {\r\n    const { el } = this;\r\n    const inputs = Array.from(el.querySelectorAll(focusableQueryString));\r\n    const lastInput = inputs.length > 0 ? inputs[inputs.length - 1] : null;\r\n    if (lastInput) {\r\n      lastInput.focus();\r\n    }\r\n    else {\r\n      el.focus();\r\n    }\r\n  }\r\n  trapKeyboardFocus(ev, doc) {\r\n    const target = ev.target;\r\n    if (!target) {\r\n      return;\r\n    }\r\n    /**\r\n     * If the target is inside the menu contents, let the browser\r\n     * focus as normal and keep a log of the last focused element.\r\n     */\r\n    if (this.el.contains(target)) {\r\n      this.lastFocus = target;\r\n    }\r\n    else {\r\n      /**\r\n       * Otherwise, we are about to have focus go out of the menu.\r\n       * Wrap the focus to either the first or last element.\r\n       */\r\n      /**\r\n       * Once we call `focusFirstDescendant`, another focus event\r\n       * will fire, which will cause `lastFocus` to be updated\r\n       * before we can run the code after that. We cache the value\r\n       * here to avoid that.\r\n       */\r\n      this.focusFirstDescendant();\r\n      /**\r\n       * If the cached last focused element is the same as the now-\r\n       * active element, that means the user was on the first element\r\n       * already and pressed Shift + Tab, so we need to wrap to the\r\n       * last descendant.\r\n       */\r\n      if (this.lastFocus === doc.activeElement) {\r\n        this.focusLastDescendant();\r\n      }\r\n    }\r\n  }\r\n  async _setOpen(shouldOpen, animated = true) {\r\n    // If the menu is disabled or it is currently being animated, let's do nothing\r\n    if (!this._isActive() || this.isAnimating || shouldOpen === this._isOpen) {\r\n      return false;\r\n    }\r\n    this.beforeAnimation(shouldOpen);\r\n    await this.loadAnimation();\r\n    await this.startAnimation(shouldOpen, animated);\r\n    this.afterAnimation(shouldOpen);\r\n    return true;\r\n  }\r\n  async loadAnimation() {\r\n    // Menu swipe animation takes the menu's inner width as parameter,\r\n    // If `offsetWidth` changes, we need to create a new animation.\r\n    const width = this.menuInnerEl.offsetWidth;\r\n    if (width === this.width && this.animation !== undefined) {\r\n      return;\r\n    }\r\n    this.width = width;\r\n    // Destroy existing animation\r\n    if (this.animation) {\r\n      this.animation.destroy();\r\n      this.animation = undefined;\r\n    }\r\n    // Create new animation\r\n    this.animation = await menuController._createAnimation(this.type, this);\r\n    if (!config.getBoolean('animated', true)) {\r\n      this.animation.duration(0);\r\n    }\r\n    this.animation.fill('both');\r\n  }\r\n  async startAnimation(shouldOpen, animated) {\r\n    const isReversed = !shouldOpen;\r\n    const mode = getIonMode(this);\r\n    const easing = mode === 'ios' ? iosEasing : mdEasing;\r\n    const easingReverse = mode === 'ios' ? iosEasingReverse : mdEasingReverse;\r\n    const ani = this.animation\r\n      .direction((isReversed) ? 'reverse' : 'normal')\r\n      .easing((isReversed) ? easingReverse : easing)\r\n      .onFinish(() => {\r\n      if (ani.getDirection() === 'reverse') {\r\n        ani.direction('normal');\r\n      }\r\n    });\r\n    if (animated) {\r\n      await ani.play();\r\n    }\r\n    else {\r\n      ani.play({ sync: true });\r\n    }\r\n  }\r\n  _isActive() {\r\n    return !this.disabled && !this.isPaneVisible;\r\n  }\r\n  canSwipe() {\r\n    return this.swipeGesture && !this.isAnimating && this._isActive();\r\n  }\r\n  canStart(detail) {\r\n    // Do not allow swipe gesture if a modal is open\r\n    const isModalPresented = !!document.querySelector('ion-modal.show-modal');\r\n    if (isModalPresented || !this.canSwipe()) {\r\n      return false;\r\n    }\r\n    if (this._isOpen) {\r\n      return true;\r\n      // TODO error\r\n    }\r\n    else if (menuController._getOpenSync()) {\r\n      return false;\r\n    }\r\n    return checkEdgeSide(window, detail.currentX, this.isEndSide, this.maxEdgeStart);\r\n  }\r\n  onWillStart() {\r\n    this.beforeAnimation(!this._isOpen);\r\n    return this.loadAnimation();\r\n  }\r\n  onStart() {\r\n    if (!this.isAnimating || !this.animation) {\r\n      assert(false, 'isAnimating has to be true');\r\n      return;\r\n    }\r\n    // the cloned animation should not use an easing curve during seek\r\n    this.animation.progressStart(true, (this._isOpen) ? 1 : 0);\r\n  }\r\n  onMove(detail) {\r\n    if (!this.isAnimating || !this.animation) {\r\n      assert(false, 'isAnimating has to be true');\r\n      return;\r\n    }\r\n    const delta = computeDelta(detail.deltaX, this._isOpen, this.isEndSide);\r\n    const stepValue = delta / this.width;\r\n    this.animation.progressStep((this._isOpen) ? 1 - stepValue : stepValue);\r\n  }\r\n  onEnd(detail) {\r\n    if (!this.isAnimating || !this.animation) {\r\n      assert(false, 'isAnimating has to be true');\r\n      return;\r\n    }\r\n    const isOpen = this._isOpen;\r\n    const isEndSide = this.isEndSide;\r\n    const delta = computeDelta(detail.deltaX, isOpen, isEndSide);\r\n    const width = this.width;\r\n    const stepValue = delta / width;\r\n    const velocity = detail.velocityX;\r\n    const z = width / 2.0;\r\n    const shouldCompleteRight = velocity >= 0 && (velocity > 0.2 || detail.deltaX > z);\r\n    const shouldCompleteLeft = velocity <= 0 && (velocity < -0.2 || detail.deltaX < -z);\r\n    const shouldComplete = isOpen\r\n      ? isEndSide ? shouldCompleteRight : shouldCompleteLeft\r\n      : isEndSide ? shouldCompleteLeft : shouldCompleteRight;\r\n    let shouldOpen = !isOpen && shouldComplete;\r\n    if (isOpen && !shouldComplete) {\r\n      shouldOpen = true;\r\n    }\r\n    this.lastOnEnd = detail.currentTime;\r\n    // Account for rounding errors in JS\r\n    let newStepValue = (shouldComplete) ? 0.001 : -0.001;\r\n    /**\r\n     * TODO: stepValue can sometimes return a negative\r\n     * value, but you can't have a negative time value\r\n     * for the cubic bezier curve (at least with web animations)\r\n     * Not sure if the negative step value is an error or not\r\n     */\r\n    const adjustedStepValue = (stepValue < 0) ? 0.01 : stepValue;\r\n    /**\r\n     * Animation will be reversed here, so need to\r\n     * reverse the easing curve as well\r\n     *\r\n     * Additionally, we need to account for the time relative\r\n     * to the new easing curve, as `stepValue` is going to be given\r\n     * in terms of a linear curve.\r\n     */\r\n    newStepValue += getTimeGivenProgression([0, 0], [0.4, 0], [0.6, 1], [1, 1], clamp(0, adjustedStepValue, 0.9999))[0] || 0;\r\n    const playTo = (this._isOpen) ? !shouldComplete : shouldComplete;\r\n    this.animation\r\n      .easing('cubic-bezier(0.4, 0.0, 0.6, 1)')\r\n      .onFinish(() => this.afterAnimation(shouldOpen), { oneTimeCallback: true })\r\n      .progressEnd((playTo) ? 1 : 0, (this._isOpen) ? 1 - newStepValue : newStepValue, 300);\r\n  }\r\n  beforeAnimation(shouldOpen) {\r\n    assert(!this.isAnimating, '_before() should not be called while animating');\r\n    // this places the menu into the correct location before it animates in\r\n    // this css class doesn't actually kick off any animations\r\n    this.el.classList.add(SHOW_MENU);\r\n    /**\r\n     * We add a tabindex here so that focus trapping\r\n     * still works even if the menu does not have\r\n     * any focusable elements slotted inside. The\r\n     * focus trapping utility will fallback to focusing\r\n     * the menu so focus does not leave when the menu\r\n     * is open.\r\n     */\r\n    this.el.setAttribute('tabindex', '0');\r\n    if (this.backdropEl) {\r\n      this.backdropEl.classList.add(SHOW_BACKDROP);\r\n    }\r\n    this.blocker.block();\r\n    this.isAnimating = true;\r\n    if (shouldOpen) {\r\n      this.ionWillOpen.emit();\r\n    }\r\n    else {\r\n      this.ionWillClose.emit();\r\n    }\r\n  }\r\n  afterAnimation(isOpen) {\r\n    assert(this.isAnimating, '_before() should be called while animating');\r\n    // keep opening/closing the menu disabled for a touch more yet\r\n    // only add listeners/css if it's enabled and isOpen\r\n    // and only remove listeners/css if it's not open\r\n    // emit opened/closed events\r\n    this._isOpen = isOpen;\r\n    this.isAnimating = false;\r\n    if (!this._isOpen) {\r\n      this.blocker.unblock();\r\n    }\r\n    if (isOpen) {\r\n      // add css class and hide content behind menu from screen readers\r\n      if (this.contentEl) {\r\n        this.contentEl.classList.add(MENU_CONTENT_OPEN);\r\n        /**\r\n         * When the menu is open and overlaying the main\r\n         * content, the main content should not be announced\r\n         * by the screenreader as the menu is the main\r\n         * focus. This is useful with screenreaders that have\r\n         * \"read from top\" gestures that read the entire\r\n         * page from top to bottom when activated.\r\n         */\r\n        this.contentEl.setAttribute('aria-hidden', 'true');\r\n      }\r\n      // emit open event\r\n      this.ionDidOpen.emit();\r\n      // focus menu content for screen readers\r\n      if (this.menuInnerEl) {\r\n        this.focusFirstDescendant();\r\n      }\r\n      // setup focus trapping\r\n      document.addEventListener('focus', this.handleFocus, true);\r\n    }\r\n    else {\r\n      // remove css classes and unhide content from screen readers\r\n      this.el.classList.remove(SHOW_MENU);\r\n      /**\r\n       * Remove tabindex from the menu component\r\n       * so that is cannot be tabbed to.\r\n       */\r\n      this.el.removeAttribute('tabindex');\r\n      if (this.contentEl) {\r\n        this.contentEl.classList.remove(MENU_CONTENT_OPEN);\r\n        /**\r\n         * Remove aria-hidden so screen readers\r\n         * can announce the main content again\r\n         * now that the menu is not the main focus.\r\n         */\r\n        this.contentEl.removeAttribute('aria-hidden');\r\n      }\r\n      if (this.backdropEl) {\r\n        this.backdropEl.classList.remove(SHOW_BACKDROP);\r\n      }\r\n      if (this.animation) {\r\n        this.animation.stop();\r\n      }\r\n      // emit close event\r\n      this.ionDidClose.emit();\r\n      // undo focus trapping so multiple menus don't collide\r\n      document.removeEventListener('focus', this.handleFocus, true);\r\n    }\r\n  }\r\n  updateState() {\r\n    const isActive = this._isActive();\r\n    if (this.gesture) {\r\n      this.gesture.enable(isActive && this.swipeGesture);\r\n    }\r\n    // Close menu immediately\r\n    if (!isActive && this._isOpen) {\r\n      // close if this menu is open, and should not be enabled\r\n      this.forceClosing();\r\n    }\r\n    if (!this.disabled) {\r\n      menuController._setActiveMenu(this);\r\n    }\r\n    assert(!this.isAnimating, 'can not be animating');\r\n  }\r\n  forceClosing() {\r\n    assert(this._isOpen, 'menu cannot be closed');\r\n    this.isAnimating = true;\r\n    const ani = this.animation.direction('reverse');\r\n    ani.play({ sync: true });\r\n    this.afterAnimation(false);\r\n  }\r\n  render() {\r\n    const { isEndSide, type, disabled, isPaneVisible, inheritedAttributes } = this;\r\n    const mode = getIonMode(this);\r\n    return (h(Host, { role: \"navigation\", \"aria-label\": inheritedAttributes['aria-label'] || 'menu', class: {\r\n        [mode]: true,\r\n        [`menu-type-${type}`]: true,\r\n        'menu-enabled': !disabled,\r\n        'menu-side-end': isEndSide,\r\n        'menu-side-start': !isEndSide,\r\n        'menu-pane-visible': isPaneVisible\r\n      } }, h(\"div\", { class: \"menu-inner\", part: \"container\", ref: el => this.menuInnerEl = el }, h(\"slot\", null)), h(\"ion-backdrop\", { ref: el => this.backdropEl = el, class: \"menu-backdrop\", tappable: false, stopPropagation: false, part: \"backdrop\" })));\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"type\": [\"typeChanged\"],\r\n    \"disabled\": [\"disabledChanged\"],\r\n    \"side\": [\"sideChanged\"],\r\n    \"swipeGesture\": [\"swipeGestureChanged\"]\r\n  }; }\r\n};\r\nconst computeDelta = (deltaX, isOpen, isEndSide) => {\r\n  return Math.max(0, isOpen !== isEndSide ? -deltaX : deltaX);\r\n};\r\nconst checkEdgeSide = (win, posX, isEndSide, maxEdgeStart) => {\r\n  if (isEndSide) {\r\n    return posX >= win.innerWidth - maxEdgeStart;\r\n  }\r\n  else {\r\n    return posX <= maxEdgeStart;\r\n  }\r\n};\r\nconst SHOW_MENU = 'show-menu';\r\nconst SHOW_BACKDROP = 'show-backdrop';\r\nconst MENU_CONTENT_OPEN = 'menu-content-open';\r\nMenu.style = {\r\n  ios: menuIosCss,\r\n  md: menuMdCss\r\n};\r\n\r\n// Given a menu, return whether or not the menu toggle should be visible\r\nconst updateVisibility = async (menu) => {\r\n  const menuEl = await menuController.get(menu);\r\n  return !!(menuEl && await menuEl.isActive());\r\n};\r\n\r\nconst menuButtonIosCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.1;--border-radius:4px;--color:var(--ion-color-primary, #3880ff);--padding-start:5px;--padding-end:5px;height:32px;font-size:31px}:host(.ion-activated){opacity:0.4}@media (any-hover: hover){:host(:hover){opacity:0.6}}\";\r\n\r\nconst menuButtonMdCss = \":host{--background:transparent;--color-focused:currentColor;--border-radius:initial;--padding-top:0;--padding-bottom:0;color:var(--color);text-align:center;text-decoration:none;text-overflow:ellipsis;text-transform:none;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none}.button-native{border-radius:var(--border-radius);font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;border:0;outline:none;background:var(--background);line-height:1;cursor:pointer;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:0;-webkit-appearance:none;-moz-appearance:none;appearance:none}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-negative:0;flex-shrink:0;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}ion-icon{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0;padding-left:0;padding-right:0;padding-top:0;padding-bottom:0;pointer-events:none}:host(.menu-button-hidden){display:none}:host(.menu-button-disabled){cursor:default;opacity:0.5;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity, 0)}}:host(.ion-color) .button-native{color:var(--ion-color-base)}:host(.in-toolbar:not(.in-toolbar-color)){color:var(--ion-toolbar-color, var(--color))}:host{--background-focused:currentColor;--background-focused-opacity:.12;--background-hover:currentColor;--background-hover-opacity:.04;--border-radius:50%;--color:initial;--padding-start:8px;--padding-end:8px;width:48px;height:48px;font-size:24px}:host(.ion-color.ion-focused)::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.ion-color:hover) .button-native::after{background:var(--ion-color-base)}}\";\r\n\r\nconst MenuButton = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.inheritedAttributes = {};\r\n    this.visible = false;\r\n    /**\r\n     * If `true`, the user cannot interact with the menu button.\r\n     */\r\n    this.disabled = false;\r\n    /**\r\n     * Automatically hides the menu button when the corresponding menu is not active\r\n     */\r\n    this.autoHide = true;\r\n    /**\r\n     * The type of the button.\r\n     */\r\n    this.type = 'button';\r\n    this.onClick = async () => {\r\n      return menuController.toggle(this.menu);\r\n    };\r\n  }\r\n  componentWillLoad() {\r\n    this.inheritedAttributes = inheritAttributes(this.el, ['aria-label']);\r\n  }\r\n  componentDidLoad() {\r\n    this.visibilityChanged();\r\n  }\r\n  async visibilityChanged() {\r\n    this.visible = await updateVisibility(this.menu);\r\n  }\r\n  render() {\r\n    const { color, disabled, inheritedAttributes } = this;\r\n    const mode = getIonMode(this);\r\n    const menuIcon = config.get('menuIcon', mode === 'ios' ? 'menu-outline' : 'menu-sharp');\r\n    const hidden = this.autoHide && !this.visible;\r\n    const attrs = {\r\n      type: this.type\r\n    };\r\n    const ariaLabel = inheritedAttributes['aria-label'] || 'menu';\r\n    return (h(Host, { onClick: this.onClick, \"aria-disabled\": disabled ? 'true' : null, \"aria-hidden\": hidden ? 'true' : null, class: createColorClasses(color, {\r\n        [mode]: true,\r\n        'button': true,\r\n        'menu-button-hidden': hidden,\r\n        'menu-button-disabled': disabled,\r\n        'in-toolbar': hostContext('ion-toolbar', this.el),\r\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\r\n        'ion-activatable': true,\r\n        'ion-focusable': true\r\n      }) }, h(\"button\", Object.assign({}, attrs, { disabled: disabled, class: \"button-native\", part: \"native\", \"aria-label\": ariaLabel }), h(\"span\", { class: \"button-inner\" }, h(\"slot\", null, h(\"ion-icon\", { part: \"icon\", icon: menuIcon, mode: mode, lazy: false, \"aria-hidden\": \"true\" }))), mode === 'md' && h(\"ion-ripple-effect\", { type: \"unbounded\" }))));\r\n  }\r\n  get el() { return getElement(this); }\r\n};\r\nMenuButton.style = {\r\n  ios: menuButtonIosCss,\r\n  md: menuButtonMdCss\r\n};\r\n\r\nconst menuToggleCss = \":host(.menu-toggle-hidden){display:none}\";\r\n\r\nconst MenuToggle = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.visible = false;\r\n    /**\r\n     * Automatically hides the content when the corresponding menu is not active.\r\n     *\r\n     * By default, it's `true`. Change it to `false` in order to\r\n     * keep `ion-menu-toggle` always visible regardless the state of the menu.\r\n     */\r\n    this.autoHide = true;\r\n    this.onClick = () => {\r\n      return menuController.toggle(this.menu);\r\n    };\r\n  }\r\n  connectedCallback() {\r\n    this.visibilityChanged();\r\n  }\r\n  async visibilityChanged() {\r\n    this.visible = await updateVisibility(this.menu);\r\n  }\r\n  render() {\r\n    const mode = getIonMode(this);\r\n    const hidden = this.autoHide && !this.visible;\r\n    return (h(Host, { onClick: this.onClick, \"aria-hidden\": hidden ? 'true' : null, class: {\r\n        [mode]: true,\r\n        'menu-toggle-hidden': hidden,\r\n      } }, h(\"slot\", null)));\r\n  }\r\n};\r\nMenuToggle.style = menuToggleCss;\r\n\r\nexport { Menu as ion_menu, MenuButton as ion_menu_button, MenuToggle as ion_menu_toggle };\r\n"],"sourceRoot":"webpack:///","file":"19-es5.js"}