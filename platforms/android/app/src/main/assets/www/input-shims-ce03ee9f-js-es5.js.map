{"version":3,"sources":["node_modules/@ionic/core/dist/esm/input-shims-ce03ee9f.js"],"names":[],"mappings":"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","sourcesContent":["import { a as addEventListener, b as removeEventListener, r as raf, p as pointerCoord, c as componentOnReady } from './helpers-1457892a.js';\r\n\r\nconst cloneMap = new WeakMap();\r\nconst relocateInput = (componentEl, inputEl, shouldRelocate, inputRelativeY = 0) => {\r\n  if (cloneMap.has(componentEl) === shouldRelocate) {\r\n    return;\r\n  }\r\n  if (shouldRelocate) {\r\n    addClone(componentEl, inputEl, inputRelativeY);\r\n  }\r\n  else {\r\n    removeClone(componentEl, inputEl);\r\n  }\r\n};\r\nconst isFocused = (input) => {\r\n  return input === input.getRootNode().activeElement;\r\n};\r\nconst addClone = (componentEl, inputEl, inputRelativeY) => {\r\n  // this allows for the actual input to receive the focus from\r\n  // the user's touch event, but before it receives focus, it\r\n  // moves the actual input to a location that will not screw\r\n  // up the app's layout, and does not allow the native browser\r\n  // to attempt to scroll the input into place (messing up headers/footers)\r\n  // the cloned input fills the area of where native input should be\r\n  // while the native input fakes out the browser by relocating itself\r\n  // before it receives the actual focus event\r\n  // We hide the focused input (with the visible caret) invisible by making it scale(0),\r\n  const parentEl = inputEl.parentNode;\r\n  // DOM WRITES\r\n  const clonedEl = inputEl.cloneNode(false);\r\n  clonedEl.classList.add('cloned-input');\r\n  clonedEl.tabIndex = -1;\r\n  parentEl.appendChild(clonedEl);\r\n  cloneMap.set(componentEl, clonedEl);\r\n  const doc = componentEl.ownerDocument;\r\n  const tx = doc.dir === 'rtl' ? 9999 : -9999;\r\n  componentEl.style.pointerEvents = 'none';\r\n  inputEl.style.transform = `translate3d(${tx}px,${inputRelativeY}px,0) scale(0)`;\r\n};\r\nconst removeClone = (componentEl, inputEl) => {\r\n  const clone = cloneMap.get(componentEl);\r\n  if (clone) {\r\n    cloneMap.delete(componentEl);\r\n    clone.remove();\r\n  }\r\n  componentEl.style.pointerEvents = '';\r\n  inputEl.style.transform = '';\r\n};\r\n\r\nconst enableHideCaretOnScroll = (componentEl, inputEl, scrollEl) => {\r\n  if (!scrollEl || !inputEl) {\r\n    return () => { return; };\r\n  }\r\n  const scrollHideCaret = (shouldHideCaret) => {\r\n    if (isFocused(inputEl)) {\r\n      relocateInput(componentEl, inputEl, shouldHideCaret);\r\n    }\r\n  };\r\n  const onBlur = () => relocateInput(componentEl, inputEl, false);\r\n  const hideCaret = () => scrollHideCaret(true);\r\n  const showCaret = () => scrollHideCaret(false);\r\n  addEventListener(scrollEl, 'ionScrollStart', hideCaret);\r\n  addEventListener(scrollEl, 'ionScrollEnd', showCaret);\r\n  inputEl.addEventListener('blur', onBlur);\r\n  return () => {\r\n    removeEventListener(scrollEl, 'ionScrollStart', hideCaret);\r\n    removeEventListener(scrollEl, 'ionScrollEnd', showCaret);\r\n    inputEl.addEventListener('ionBlur', onBlur);\r\n  };\r\n};\r\n\r\nconst SKIP_SELECTOR = 'input, textarea, [no-blur], [contenteditable]';\r\nconst enableInputBlurring = () => {\r\n  let focused = true;\r\n  let didScroll = false;\r\n  const doc = document;\r\n  const onScroll = () => {\r\n    didScroll = true;\r\n  };\r\n  const onFocusin = () => {\r\n    focused = true;\r\n  };\r\n  const onTouchend = (ev) => {\r\n    // if app did scroll return early\r\n    if (didScroll) {\r\n      didScroll = false;\r\n      return;\r\n    }\r\n    const active = doc.activeElement;\r\n    if (!active) {\r\n      return;\r\n    }\r\n    // only blur if the active element is a text-input or a textarea\r\n    if (active.matches(SKIP_SELECTOR)) {\r\n      return;\r\n    }\r\n    // if the selected target is the active element, do not blur\r\n    const tapped = ev.target;\r\n    if (tapped === active) {\r\n      return;\r\n    }\r\n    if (tapped.matches(SKIP_SELECTOR) || tapped.closest(SKIP_SELECTOR)) {\r\n      return;\r\n    }\r\n    focused = false;\r\n    // TODO: find a better way, why 50ms?\r\n    setTimeout(() => {\r\n      if (!focused) {\r\n        active.blur();\r\n      }\r\n    }, 50);\r\n  };\r\n  addEventListener(doc, 'ionScrollStart', onScroll);\r\n  doc.addEventListener('focusin', onFocusin, true);\r\n  doc.addEventListener('touchend', onTouchend, false);\r\n  return () => {\r\n    removeEventListener(doc, 'ionScrollStart', onScroll, true);\r\n    doc.removeEventListener('focusin', onFocusin, true);\r\n    doc.removeEventListener('touchend', onTouchend, false);\r\n  };\r\n};\r\n\r\nconst SCROLL_ASSIST_SPEED = 0.3;\r\nconst getScrollData = (componentEl, contentEl, keyboardHeight) => {\r\n  const itemEl = componentEl.closest('ion-item,[ion-item]') || componentEl;\r\n  return calcScrollData(itemEl.getBoundingClientRect(), contentEl.getBoundingClientRect(), keyboardHeight, componentEl.ownerDocument.defaultView.innerHeight);\r\n};\r\nconst calcScrollData = (inputRect, contentRect, keyboardHeight, platformHeight) => {\r\n  // compute input's Y values relative to the body\r\n  const inputTop = inputRect.top;\r\n  const inputBottom = inputRect.bottom;\r\n  // compute visible area\r\n  const visibleAreaTop = contentRect.top;\r\n  const visibleAreaBottom = Math.min(contentRect.bottom, platformHeight - keyboardHeight);\r\n  // compute safe area\r\n  const safeAreaTop = visibleAreaTop + 15;\r\n  const safeAreaBottom = visibleAreaBottom * 0.75;\r\n  // figure out if each edge of the input is within the safe area\r\n  const distanceToBottom = safeAreaBottom - inputBottom;\r\n  const distanceToTop = safeAreaTop - inputTop;\r\n  // desiredScrollAmount is the negated distance to the safe area according to our calculations.\r\n  const desiredScrollAmount = Math.round((distanceToBottom < 0)\r\n    ? -distanceToBottom\r\n    : (distanceToTop > 0)\r\n      ? -distanceToTop\r\n      : 0);\r\n  // our calculations make some assumptions that aren't always true, like the keyboard being closed when an input\r\n  // gets focus, so make sure we don't scroll the input above the visible area\r\n  const scrollAmount = Math.min(desiredScrollAmount, inputTop - visibleAreaTop);\r\n  const distance = Math.abs(scrollAmount);\r\n  const duration = distance / SCROLL_ASSIST_SPEED;\r\n  const scrollDuration = Math.min(400, Math.max(150, duration));\r\n  return {\r\n    scrollAmount,\r\n    scrollDuration,\r\n    scrollPadding: keyboardHeight,\r\n    inputSafeY: -(inputTop - safeAreaTop) + 4\r\n  };\r\n};\r\n\r\nconst enableScrollAssist = (componentEl, inputEl, contentEl, footerEl, keyboardHeight) => {\r\n  let coord;\r\n  const touchStart = (ev) => {\r\n    coord = pointerCoord(ev);\r\n  };\r\n  const touchEnd = (ev) => {\r\n    // input cover touchend/mouseup\r\n    if (!coord) {\r\n      return;\r\n    }\r\n    // get where the touchend/mouseup ended\r\n    const endCoord = pointerCoord(ev);\r\n    // focus this input if the pointer hasn't moved XX pixels\r\n    // and the input doesn't already have focus\r\n    if (!hasPointerMoved(6, coord, endCoord) && !isFocused(inputEl)) {\r\n      ev.stopPropagation();\r\n      // begin the input focus process\r\n      jsSetFocus(componentEl, inputEl, contentEl, footerEl, keyboardHeight);\r\n    }\r\n  };\r\n  componentEl.addEventListener('touchstart', touchStart, true);\r\n  componentEl.addEventListener('touchend', touchEnd, true);\r\n  return () => {\r\n    componentEl.removeEventListener('touchstart', touchStart, true);\r\n    componentEl.removeEventListener('touchend', touchEnd, true);\r\n  };\r\n};\r\nconst jsSetFocus = async (componentEl, inputEl, contentEl, footerEl, keyboardHeight) => {\r\n  if (!contentEl && !footerEl) {\r\n    return;\r\n  }\r\n  const scrollData = getScrollData(componentEl, (contentEl || footerEl), keyboardHeight);\r\n  if (contentEl && Math.abs(scrollData.scrollAmount) < 4) {\r\n    // the text input is in a safe position that doesn't\r\n    // require it to be scrolled into view, just set focus now\r\n    inputEl.focus();\r\n    return;\r\n  }\r\n  // temporarily move the focus to the focus holder so the browser\r\n  // doesn't freak out while it's trying to get the input in place\r\n  // at this point the native text input still does not have focus\r\n  relocateInput(componentEl, inputEl, true, scrollData.inputSafeY);\r\n  inputEl.focus();\r\n  /**\r\n   * Relocating/Focusing input causes the\r\n   * click event to be cancelled, so\r\n   * manually fire one here.\r\n   */\r\n  raf(() => componentEl.click());\r\n  /* tslint:disable-next-line */\r\n  if (typeof window !== 'undefined') {\r\n    let scrollContentTimeout;\r\n    const scrollContent = async () => {\r\n      // clean up listeners and timeouts\r\n      if (scrollContentTimeout !== undefined) {\r\n        clearTimeout(scrollContentTimeout);\r\n      }\r\n      window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\r\n      window.removeEventListener('ionKeyboardDidShow', scrollContent);\r\n      // scroll the input into place\r\n      if (contentEl) {\r\n        await contentEl.scrollByPoint(0, scrollData.scrollAmount, scrollData.scrollDuration);\r\n      }\r\n      // the scroll view is in the correct position now\r\n      // give the native text input focus\r\n      relocateInput(componentEl, inputEl, false, scrollData.inputSafeY);\r\n      // ensure this is the focused input\r\n      inputEl.focus();\r\n    };\r\n    const doubleKeyboardEventListener = () => {\r\n      window.removeEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\r\n      window.addEventListener('ionKeyboardDidShow', scrollContent);\r\n    };\r\n    if (contentEl) {\r\n      const scrollEl = await contentEl.getScrollElement();\r\n      /**\r\n       * scrollData will only consider the amount we need\r\n       * to scroll in order to properly bring the input\r\n       * into view. It will not consider the amount\r\n       * we can scroll in the content element.\r\n       * As a result, scrollData may request a greater\r\n       * scroll position than is currently available\r\n       * in the DOM. If this is the case, we need to\r\n       * wait for the webview to resize/the keyboard\r\n       * to show in order for additional scroll\r\n       * bandwidth to become available.\r\n       */\r\n      const totalScrollAmount = scrollEl.scrollHeight - scrollEl.clientHeight;\r\n      if (scrollData.scrollAmount > (totalScrollAmount - scrollEl.scrollTop)) {\r\n        /**\r\n         * On iOS devices, the system will show a \"Passwords\" bar above the keyboard\r\n         * after the initial keyboard is shown. This prevents the webview from resizing\r\n         * until the \"Passwords\" bar is shown, so we need to wait for that to happen first.\r\n         */\r\n        if (inputEl.type === 'password') {\r\n          // Add 50px to account for the \"Passwords\" bar\r\n          scrollData.scrollAmount += 50;\r\n          window.addEventListener('ionKeyboardDidShow', doubleKeyboardEventListener);\r\n        }\r\n        else {\r\n          window.addEventListener('ionKeyboardDidShow', scrollContent);\r\n        }\r\n        /**\r\n         * This should only fire in 2 instances:\r\n         * 1. The app is very slow.\r\n         * 2. The app is running in a browser on an old OS\r\n         * that does not support Ionic Keyboard Events\r\n         */\r\n        scrollContentTimeout = setTimeout(scrollContent, 1000);\r\n        return;\r\n      }\r\n    }\r\n    scrollContent();\r\n  }\r\n};\r\nconst hasPointerMoved = (threshold, startCoord, endCoord) => {\r\n  if (startCoord && endCoord) {\r\n    const deltaX = (startCoord.x - endCoord.x);\r\n    const deltaY = (startCoord.y - endCoord.y);\r\n    const distance = deltaX * deltaX + deltaY * deltaY;\r\n    return distance > (threshold * threshold);\r\n  }\r\n  return false;\r\n};\r\n\r\nconst PADDING_TIMER_KEY = '$ionPaddingTimer';\r\nconst enableScrollPadding = (keyboardHeight) => {\r\n  const doc = document;\r\n  const onFocusin = (ev) => {\r\n    setScrollPadding(ev.target, keyboardHeight);\r\n  };\r\n  const onFocusout = (ev) => {\r\n    setScrollPadding(ev.target, 0);\r\n  };\r\n  doc.addEventListener('focusin', onFocusin);\r\n  doc.addEventListener('focusout', onFocusout);\r\n  return () => {\r\n    doc.removeEventListener('focusin', onFocusin);\r\n    doc.removeEventListener('focusout', onFocusout);\r\n  };\r\n};\r\nconst setScrollPadding = (input, keyboardHeight) => {\r\n  if (input.tagName !== 'INPUT') {\r\n    return;\r\n  }\r\n  if (input.parentElement && input.parentElement.tagName === 'ION-INPUT') {\r\n    return;\r\n  }\r\n  if (input.parentElement &&\r\n    input.parentElement.parentElement &&\r\n    input.parentElement.parentElement.tagName === 'ION-SEARCHBAR') {\r\n    return;\r\n  }\r\n  const el = input.closest('ion-content');\r\n  if (el === null) {\r\n    return;\r\n  }\r\n  const timer = el[PADDING_TIMER_KEY];\r\n  if (timer) {\r\n    clearTimeout(timer);\r\n  }\r\n  if (keyboardHeight > 0) {\r\n    el.style.setProperty('--keyboard-offset', `${keyboardHeight}px`);\r\n  }\r\n  else {\r\n    el[PADDING_TIMER_KEY] = setTimeout(() => {\r\n      el.style.setProperty('--keyboard-offset', '0px');\r\n    }, 120);\r\n  }\r\n};\r\n\r\nconst INPUT_BLURRING = true;\r\nconst SCROLL_PADDING = true;\r\nconst startInputShims = (config) => {\r\n  const doc = document;\r\n  const keyboardHeight = config.getNumber('keyboardHeight', 290);\r\n  const scrollAssist = config.getBoolean('scrollAssist', true);\r\n  const hideCaret = config.getBoolean('hideCaretOnScroll', true);\r\n  const inputBlurring = config.getBoolean('inputBlurring', true);\r\n  const scrollPadding = config.getBoolean('scrollPadding', true);\r\n  const inputs = Array.from(doc.querySelectorAll('ion-input, ion-textarea'));\r\n  const hideCaretMap = new WeakMap();\r\n  const scrollAssistMap = new WeakMap();\r\n  const registerInput = async (componentEl) => {\r\n    await new Promise(resolve => componentOnReady(componentEl, resolve));\r\n    const inputRoot = componentEl.shadowRoot || componentEl;\r\n    const inputEl = inputRoot.querySelector('input') || inputRoot.querySelector('textarea');\r\n    const scrollEl = componentEl.closest('ion-content');\r\n    const footerEl = (!scrollEl) ? componentEl.closest('ion-footer') : null;\r\n    if (!inputEl) {\r\n      return;\r\n    }\r\n    if (!!scrollEl && hideCaret && !hideCaretMap.has(componentEl)) {\r\n      const rmFn = enableHideCaretOnScroll(componentEl, inputEl, scrollEl);\r\n      hideCaretMap.set(componentEl, rmFn);\r\n    }\r\n    if ((!!scrollEl || !!footerEl) && scrollAssist && !scrollAssistMap.has(componentEl)) {\r\n      const rmFn = enableScrollAssist(componentEl, inputEl, scrollEl, footerEl, keyboardHeight);\r\n      scrollAssistMap.set(componentEl, rmFn);\r\n    }\r\n  };\r\n  const unregisterInput = (componentEl) => {\r\n    if (hideCaret) {\r\n      const fn = hideCaretMap.get(componentEl);\r\n      if (fn) {\r\n        fn();\r\n      }\r\n      hideCaretMap.delete(componentEl);\r\n    }\r\n    if (scrollAssist) {\r\n      const fn = scrollAssistMap.get(componentEl);\r\n      if (fn) {\r\n        fn();\r\n      }\r\n      scrollAssistMap.delete(componentEl);\r\n    }\r\n  };\r\n  if (inputBlurring && INPUT_BLURRING) {\r\n    enableInputBlurring();\r\n  }\r\n  if (scrollPadding && SCROLL_PADDING) {\r\n    enableScrollPadding(keyboardHeight);\r\n  }\r\n  // Input might be already loaded in the DOM before ion-device-hacks did.\r\n  // At this point we need to look for all of the inputs not registered yet\r\n  // and register them.\r\n  for (const input of inputs) {\r\n    registerInput(input);\r\n  }\r\n  doc.addEventListener('ionInputDidLoad', ((ev) => {\r\n    registerInput(ev.detail);\r\n  }));\r\n  doc.addEventListener('ionInputDidUnload', ((ev) => {\r\n    unregisterInput(ev.detail);\r\n  }));\r\n};\r\n\r\nexport { startInputShims };\r\n"],"sourceRoot":"webpack:///","file":"input-shims-ce03ee9f-js-es5.js"}