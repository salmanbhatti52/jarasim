{"version":3,"sources":["node_modules/@ionic/core/dist/esm/ion-segment_2.entry.js"],"names":[],"mappings":"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","sourcesContent":["import { r as registerInstance, e as createEvent, c as writeTask, h, H as Host, i as getElement, j as forceUpdate } from './index-7a8b7a1c.js';\r\nimport { c as config, b as getIonMode } from './ionic-global-63a97a32.js';\r\nimport { p as pointerCoord, a as addEventListener, b as removeEventListener } from './helpers-1457892a.js';\r\nimport { c as createColorClasses, h as hostContext } from './theme-ff3fc52f.js';\r\n\r\nconst segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:auto}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\r\n\r\nconst segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\r\n\r\nconst Segment = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionChange = createEvent(this, \"ionChange\", 7);\r\n    this.ionSelect = createEvent(this, \"ionSelect\", 7);\r\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\r\n    this.didInit = false;\r\n    this.activated = false;\r\n    /**\r\n     * If `true`, the user cannot interact with the segment.\r\n     */\r\n    this.disabled = false;\r\n    /**\r\n     * If `true`, the segment buttons will overflow and the user can swipe to see them.\r\n     * In addition, this will disable the gesture to drag the indicator between the buttons\r\n     * in order to swipe to see hidden buttons.\r\n     */\r\n    this.scrollable = false;\r\n    /**\r\n     * If `true`, users will be able to swipe between segment buttons to activate them.\r\n     */\r\n    this.swipeGesture = true;\r\n    this.onClick = (ev) => {\r\n      const current = ev.target;\r\n      const previous = this.checked;\r\n      // If the current element is a segment then that means\r\n      // the user tried to swipe to a segment button and\r\n      // click a segment button at the same time so we should\r\n      // not update the checked segment button\r\n      if (current.tagName === 'ION-SEGMENT') {\r\n        return;\r\n      }\r\n      this.value = current.value;\r\n      if (this.scrollable || !this.swipeGesture) {\r\n        if (previous) {\r\n          this.checkButton(previous, current);\r\n        }\r\n        else {\r\n          this.setCheckedClasses();\r\n        }\r\n      }\r\n      this.checked = current;\r\n    };\r\n  }\r\n  colorChanged(value, oldValue) {\r\n    /**\r\n     * If color is set after not having\r\n     * previously been set (or vice versa),\r\n     * we need to emit style so the segment-buttons\r\n     * can apply their color classes properly.\r\n     */\r\n    if ((oldValue === undefined && value !== undefined) ||\r\n      (oldValue !== undefined && value === undefined)) {\r\n      this.emitStyle();\r\n    }\r\n  }\r\n  swipeGestureChanged() {\r\n    this.gestureChanged();\r\n  }\r\n  valueChanged(value, oldValue) {\r\n    this.ionSelect.emit({ value });\r\n    if (oldValue !== '' || this.didInit) {\r\n      if (!this.activated) {\r\n        this.ionChange.emit({ value });\r\n      }\r\n      else {\r\n        this.valueAfterGesture = value;\r\n      }\r\n    }\r\n  }\r\n  disabledChanged() {\r\n    this.gestureChanged();\r\n    const buttons = this.getButtons();\r\n    for (const button of buttons) {\r\n      button.disabled = this.disabled;\r\n    }\r\n  }\r\n  gestureChanged() {\r\n    if (this.gesture) {\r\n      this.gesture.enable(!this.scrollable && !this.disabled && this.swipeGesture);\r\n    }\r\n  }\r\n  connectedCallback() {\r\n    this.emitStyle();\r\n  }\r\n  componentWillLoad() {\r\n    this.emitStyle();\r\n  }\r\n  async componentDidLoad() {\r\n    this.setCheckedClasses();\r\n    this.gesture = (await import('./index-34cb2743.js')).createGesture({\r\n      el: this.el,\r\n      gestureName: 'segment',\r\n      gesturePriority: 100,\r\n      threshold: 0,\r\n      passive: false,\r\n      onStart: ev => this.onStart(ev),\r\n      onMove: ev => this.onMove(ev),\r\n      onEnd: ev => this.onEnd(ev),\r\n    });\r\n    this.gestureChanged();\r\n    if (this.disabled) {\r\n      this.disabledChanged();\r\n    }\r\n    this.didInit = true;\r\n  }\r\n  onStart(detail) {\r\n    this.activate(detail);\r\n  }\r\n  onMove(detail) {\r\n    this.setNextIndex(detail);\r\n  }\r\n  onEnd(detail) {\r\n    this.setActivated(false);\r\n    const checkedValidButton = this.setNextIndex(detail, true);\r\n    detail.event.stopImmediatePropagation();\r\n    if (checkedValidButton) {\r\n      this.addRipple(detail);\r\n    }\r\n    const value = this.valueAfterGesture;\r\n    if (value !== undefined) {\r\n      this.ionChange.emit({ value });\r\n      this.valueAfterGesture = undefined;\r\n    }\r\n  }\r\n  getButtons() {\r\n    return Array.from(this.el.querySelectorAll('ion-segment-button'));\r\n  }\r\n  /**\r\n   * The gesture blocks the segment button ripple. This\r\n   * function adds the ripple based on the checked segment\r\n   * and where the cursor ended.\r\n   */\r\n  addRipple(detail) {\r\n    const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\r\n    if (!useRippleEffect) {\r\n      return;\r\n    }\r\n    const buttons = this.getButtons();\r\n    const checked = buttons.find(button => button.value === this.value);\r\n    const root = checked.shadowRoot || checked;\r\n    const ripple = root.querySelector('ion-ripple-effect');\r\n    if (!ripple) {\r\n      return;\r\n    }\r\n    const { x, y } = pointerCoord(detail.event);\r\n    ripple.addRipple(x, y).then(remove => remove());\r\n  }\r\n  /*\r\n   * Activate both the segment and the buttons\r\n   * due to a bug with ::slotted in Safari\r\n   */\r\n  setActivated(activated) {\r\n    const buttons = this.getButtons();\r\n    buttons.forEach(button => {\r\n      if (activated) {\r\n        button.classList.add('segment-button-activated');\r\n      }\r\n      else {\r\n        button.classList.remove('segment-button-activated');\r\n      }\r\n    });\r\n    this.activated = activated;\r\n  }\r\n  activate(detail) {\r\n    const clicked = detail.event.target;\r\n    const buttons = this.getButtons();\r\n    const checked = buttons.find(button => button.value === this.value);\r\n    // Make sure we are only checking for activation on a segment button\r\n    // since disabled buttons will get the click on the segment\r\n    if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\r\n      return;\r\n    }\r\n    // If there are no checked buttons, set the current button to checked\r\n    if (!checked) {\r\n      this.value = clicked.value;\r\n      this.setCheckedClasses();\r\n    }\r\n    // If the gesture began on the clicked button with the indicator\r\n    // then we should activate the indicator\r\n    if (this.value === clicked.value) {\r\n      this.setActivated(true);\r\n    }\r\n  }\r\n  getIndicator(button) {\r\n    const root = button.shadowRoot || button;\r\n    return root.querySelector('.segment-button-indicator');\r\n  }\r\n  checkButton(previous, current) {\r\n    const previousIndicator = this.getIndicator(previous);\r\n    const currentIndicator = this.getIndicator(current);\r\n    if (previousIndicator === null || currentIndicator === null) {\r\n      return;\r\n    }\r\n    const previousClientRect = previousIndicator.getBoundingClientRect();\r\n    const currentClientRect = currentIndicator.getBoundingClientRect();\r\n    const widthDelta = previousClientRect.width / currentClientRect.width;\r\n    const xPosition = previousClientRect.left - currentClientRect.left;\r\n    // Scale the indicator width to match the previous indicator width\r\n    // and translate it on top of the previous indicator\r\n    const transform = `translate3d(${xPosition}px, 0, 0) scaleX(${widthDelta})`;\r\n    writeTask(() => {\r\n      // Remove the transition before positioning on top of the previous indicator\r\n      currentIndicator.classList.remove('segment-button-indicator-animated');\r\n      currentIndicator.style.setProperty('transform', transform);\r\n      // Force a repaint to ensure the transform happens\r\n      currentIndicator.getBoundingClientRect();\r\n      // Add the transition to move the indicator into place\r\n      currentIndicator.classList.add('segment-button-indicator-animated');\r\n      // Remove the transform to slide the indicator back to the button clicked\r\n      currentIndicator.style.setProperty('transform', '');\r\n    });\r\n    this.value = current.value;\r\n    this.setCheckedClasses();\r\n  }\r\n  setCheckedClasses() {\r\n    const buttons = this.getButtons();\r\n    const index = buttons.findIndex(button => button.value === this.value);\r\n    const next = index + 1;\r\n    // Keep track of the currently checked button\r\n    this.checked = buttons.find(button => button.value === this.value);\r\n    for (const button of buttons) {\r\n      button.classList.remove('segment-button-after-checked');\r\n    }\r\n    if (next < buttons.length) {\r\n      buttons[next].classList.add('segment-button-after-checked');\r\n    }\r\n  }\r\n  setNextIndex(detail, isEnd = false) {\r\n    const isRTL = document.dir === 'rtl';\r\n    const activated = this.activated;\r\n    const buttons = this.getButtons();\r\n    const index = buttons.findIndex(button => button.value === this.value);\r\n    const previous = buttons[index];\r\n    let current;\r\n    let nextIndex;\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n    // Get the element that the touch event started on in case\r\n    // it was the checked button, then we will move the indicator\r\n    const rect = previous.getBoundingClientRect();\r\n    const left = rect.left;\r\n    const width = rect.width;\r\n    // Get the element that the gesture is on top of based on the currentX of the\r\n    // gesture event and the Y coordinate of the starting element, since the gesture\r\n    // can move up and down off of the segment\r\n    const currentX = detail.currentX;\r\n    const previousY = rect.top + (rect.height / 2);\r\n    const nextEl = document.elementFromPoint(currentX, previousY);\r\n    const decreaseIndex = isRTL ? currentX > (left + width) : currentX < left;\r\n    const increaseIndex = isRTL ? currentX < left : currentX > (left + width);\r\n    // If the indicator is currently activated then we have started the gesture\r\n    // on top of the checked button so we need to slide the indicator\r\n    // by checking the button next to it as we move\r\n    if (activated && !isEnd) {\r\n      // Decrease index, move left in LTR & right in RTL\r\n      if (decreaseIndex) {\r\n        const newIndex = index - 1;\r\n        if (newIndex >= 0) {\r\n          nextIndex = newIndex;\r\n        }\r\n        // Increase index, moves right in LTR & left in RTL\r\n      }\r\n      else if (increaseIndex) {\r\n        if (activated && !isEnd) {\r\n          const newIndex = index + 1;\r\n          if (newIndex < buttons.length) {\r\n            nextIndex = newIndex;\r\n          }\r\n        }\r\n      }\r\n      if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\r\n        current = buttons[nextIndex];\r\n      }\r\n    }\r\n    // If the indicator is not activated then we will just set the indicator\r\n    // to the element where the gesture ended\r\n    if (!activated && isEnd) {\r\n      current = nextEl;\r\n    }\r\n    /* tslint:disable-next-line */\r\n    if (current != null) {\r\n      /**\r\n       * If current element is ion-segment then that means\r\n       * user tried to select a disabled ion-segment-button,\r\n       * and we should not update the ripple.\r\n       */\r\n      if (current.tagName === 'ION-SEGMENT') {\r\n        return false;\r\n      }\r\n      if (previous !== current) {\r\n        this.checkButton(previous, current);\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  emitStyle() {\r\n    this.ionStyle.emit({\r\n      'segment': true\r\n    });\r\n  }\r\n  render() {\r\n    const mode = getIonMode(this);\r\n    return (h(Host, { role: \"tablist\", onClick: this.onClick, class: createColorClasses(this.color, {\r\n        [mode]: true,\r\n        'in-toolbar': hostContext('ion-toolbar', this.el),\r\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\r\n        'segment-activated': this.activated,\r\n        'segment-disabled': this.disabled,\r\n        'segment-scrollable': this.scrollable\r\n      }) }, h(\"slot\", null)));\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"color\": [\"colorChanged\"],\r\n    \"swipeGesture\": [\"swipeGestureChanged\"],\r\n    \"value\": [\"valueChanged\"],\r\n    \"disabled\": [\"disabledChanged\"]\r\n  }; }\r\n};\r\nSegment.style = {\r\n  ios: segmentIosCss,\r\n  md: segmentMdCss\r\n};\r\n\r\nconst segmentButtonIosCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}:host(:focus){outline:none}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:none;--background-hover-opacity:0;--background-focused:none;--background-focused-opacity:0;--border-radius:7px;--border-width:1px;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.12);--border-style:solid;--indicator-box-shadow:0 0 5px rgba(0, 0, 0, 0.16);--indicator-color:var(--ion-color-step-350, var(--ion-background-color, #fff));--indicator-height:100%;--indicator-transition:transform 260ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--transition:100ms all linear;--padding-top:0;--padding-end:13px;--padding-bottom:0;--padding-start:13px;margin-top:2px;margin-bottom:2px;position:relative;-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-direction:row;flex-direction:row;min-width:70px;min-height:28px;-webkit-transform:translate3d(0, 0, 0);transform:translate3d(0, 0, 0);font-size:13px;font-weight:450;line-height:37px}:host::before{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:5px;-webkit-transition:160ms opacity ease-in-out;transition:160ms opacity ease-in-out;-webkit-transition-delay:100ms;transition-delay:100ms;border-left:var(--border-width) var(--border-style) var(--border-color);content:\\\"\\\";opacity:1;will-change:opacity}:host(:first-of-type)::before{border-left-color:transparent}:host(.segment-button-disabled){opacity:0.3}::slotted(ion-icon){font-size:24px}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:2px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:2px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:2px;margin-inline-end:2px}}.segment-button-indicator{padding-left:2px;padding-right:2px;left:0;right:0;top:0;bottom:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.segment-button-indicator{padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:2px;padding-inline-end:2px}}.segment-button-indicator-background{border-radius:var(--border-radius);background:var(--indicator-color)}.segment-button-indicator-background{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked)::before,:host(.segment-button-after-checked)::before{opacity:0}:host(.segment-button-checked){z-index:-1}:host(.segment-button-activated){--indicator-transform:scale(0.95)}:host(.ion-focused) .button-native{opacity:0.7}@media (any-hover: hover){:host(:hover) .button-native{opacity:0.5}:host(.segment-button-checked:hover) .button-native{opacity:1}}:host(.in-segment-color){background:none;color:var(--ion-text-color, #000)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-step-350, var(--ion-background-color, #fff))}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native,:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-text-color, #000)}}:host(.in-toolbar:not(.in-segment-color)){--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, var(--ion-toolbar-color), initial);--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-toolbar-color), initial);--indicator-color:var(--ion-toolbar-segment-indicator-color, var(--ion-color-step-350, var(--ion-background-color, #fff)))}:host(.in-toolbar-color) .segment-button-indicator-background{background:#fff}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-base)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color):hover) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color):hover) .button-native{color:var(--ion-color-base)}}\";\r\n\r\nconst segmentButtonMdCss = \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;--padding-top:0;--padding-bottom:0;border-radius:var(--border-radius);display:-ms-flexbox;display:flex;position:relative;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;height:auto;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translate3d(0,  0,  0);transform:translate3d(0,  0,  0);display:-ms-flexbox;display:flex;position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;height:auto;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end)}}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){.button-native{padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native::after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native::after{background:var(--background-focused);opacity:var(--background-focused-opacity)}:host(:focus){outline:none}@media (any-hover: hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native::after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon){display:none}:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color, var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform, opacity;pointer-events:none}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow);pointer-events:none}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}@media (prefers-reduced-motion: reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:var(--color-checked);--background-focused:var(--color-checked);--background-activated-opacity:0;--background-focused-opacity:.12;--background-hover-opacity:.04;--color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--color-checked:var(--ion-color-primary, #3880ff);--indicator-box-shadow:none;--indicator-color:var(--color-checked);--indicator-height:2px;--indicator-transition:transform 250ms cubic-bezier(0.4, 0, 0.2, 1);--indicator-transform:none;--padding-top:0;--padding-end:16px;--padding-bottom:0;--padding-start:16px;--transition:color 0.15s linear 0s, opacity 0.15s linear 0s;min-width:90px;max-width:360px;min-height:48px;border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);font-size:14px;font-weight:500;letter-spacing:0.06em;line-height:40px;text-transform:uppercase}:host(.segment-button-disabled){opacity:0.3}:host(.in-segment-color){background:none;color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color) ion-ripple-effect{color:var(--ion-color-base)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked) .button-native{color:var(--ion-color-base)}:host(.in-segment-color.ion-focused) .button-native::after{background:var(--ion-color-base)}@media (any-hover: hover){:host(.in-segment-color:hover) .button-native{color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6)}:host(.in-segment-color:hover) .button-native::after{background:var(--ion-color-base)}:host(.in-segment-color.segment-button-checked:hover) .button-native{color:var(--ion-color-base)}}:host(.in-toolbar:not(.in-segment-color)){--background:var(--ion-toolbar-segment-background, none);--background-checked:var(--ion-toolbar-segment-background-checked, none);--color:var(--ion-toolbar-segment-color, rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.6));--color-checked:var(--ion-toolbar-segment-color-checked, var(--ion-color-primary, #3880ff));--indicator-color:var(--ion-toolbar-segment-color-checked, var(--color-checked))}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:rgba(var(--ion-color-contrast-rgb), 0.6)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}@media (any-hover: hover){:host(.in-toolbar-color:not(.in-segment-color)) .button-native::after{background:var(--ion-color-contrast)}}::slotted(ion-icon){margin-top:12px;margin-bottom:12px;font-size:24px}::slotted(ion-label){margin-top:12px;margin-bottom:12px}:host(.segment-button-layout-icon-top) ::slotted(ion-label),:host(.segment-button-layout-icon-bottom) ::slotted(ion-icon){margin-top:0}:host(.segment-button-layout-icon-top) ::slotted(ion-icon),:host(.segment-button-layout-icon-bottom) ::slotted(ion-label){margin-bottom:0}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:8px;margin-right:0}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:8px;margin-inline-start:8px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:8px}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:8px;margin-inline-end:8px}}:host(.segment-button-has-icon-only) ::slotted(ion-icon){margin-top:12px;margin-bottom:12px}:host(.segment-button-has-label-only) ::slotted(ion-label){margin-top:12px;margin-bottom:12px}.segment-button-indicator{left:0;right:0;bottom:0}.segment-button-indicator-background{background:var(--indicator-color)}:host(.in-toolbar:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-toolbar-segment-indicator-color, var(--indicator-color))}:host(.in-toolbar-color:not(.in-segment-color)) .segment-button-indicator-background{background:var(--ion-color-contrast)}\";\r\n\r\nlet ids = 0;\r\nconst SegmentButton = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.segmentEl = null;\r\n    this.checked = false;\r\n    /**\r\n     * If `true`, the user cannot interact with the segment button.\r\n     */\r\n    this.disabled = false;\r\n    /**\r\n     * Set the layout of the text and icon in the segment.\r\n     */\r\n    this.layout = 'icon-top';\r\n    /**\r\n     * The type of the button.\r\n     */\r\n    this.type = 'button';\r\n    /**\r\n     * The value of the segment button.\r\n     */\r\n    this.value = 'ion-sb-' + (ids++);\r\n    this.updateStyle = () => {\r\n      forceUpdate(this);\r\n    };\r\n    this.updateState = () => {\r\n      if (this.segmentEl) {\r\n        this.checked = this.segmentEl.value === this.value;\r\n      }\r\n    };\r\n  }\r\n  connectedCallback() {\r\n    const segmentEl = this.segmentEl = this.el.closest('ion-segment');\r\n    if (segmentEl) {\r\n      this.updateState();\r\n      addEventListener(segmentEl, 'ionSelect', this.updateState);\r\n      addEventListener(segmentEl, 'ionStyle', this.updateStyle);\r\n    }\r\n  }\r\n  disconnectedCallback() {\r\n    const segmentEl = this.segmentEl;\r\n    if (segmentEl) {\r\n      removeEventListener(segmentEl, 'ionSelect', this.updateState);\r\n      removeEventListener(segmentEl, 'ionStyle', this.updateStyle);\r\n      this.segmentEl = null;\r\n    }\r\n  }\r\n  get hasLabel() {\r\n    return !!this.el.querySelector('ion-label');\r\n  }\r\n  get hasIcon() {\r\n    return !!this.el.querySelector('ion-icon');\r\n  }\r\n  get tabIndex() {\r\n    if (this.disabled) {\r\n      return -1;\r\n    }\r\n    const hasTabIndex = this.el.hasAttribute('tabindex');\r\n    if (hasTabIndex) {\r\n      return this.el.getAttribute('tabindex');\r\n    }\r\n    return 0;\r\n  }\r\n  render() {\r\n    const { checked, type, disabled, hasIcon, hasLabel, layout, segmentEl, tabIndex } = this;\r\n    const mode = getIonMode(this);\r\n    const hasSegmentColor = () => segmentEl !== null && segmentEl.color !== undefined;\r\n    return (h(Host, { role: \"tab\", \"aria-selected\": checked ? 'true' : 'false', \"aria-disabled\": disabled ? 'true' : null, tabIndex: tabIndex, class: {\r\n        [mode]: true,\r\n        'in-toolbar': hostContext('ion-toolbar', this.el),\r\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\r\n        'in-segment': hostContext('ion-segment', this.el),\r\n        'in-segment-color': hasSegmentColor(),\r\n        'segment-button-has-label': hasLabel,\r\n        'segment-button-has-icon': hasIcon,\r\n        'segment-button-has-label-only': hasLabel && !hasIcon,\r\n        'segment-button-has-icon-only': hasIcon && !hasLabel,\r\n        'segment-button-disabled': disabled,\r\n        'segment-button-checked': checked,\r\n        [`segment-button-layout-${layout}`]: true,\r\n        'ion-activatable': true,\r\n        'ion-activatable-instant': true,\r\n        'ion-focusable': true,\r\n      } }, h(\"button\", { type: type, tabIndex: -1, class: \"button-native\", part: \"native\", disabled: disabled }, h(\"span\", { class: \"button-inner\" }, h(\"slot\", null)), mode === 'md' && h(\"ion-ripple-effect\", null)), h(\"div\", { part: \"indicator\", class: {\r\n        'segment-button-indicator': true,\r\n        'segment-button-indicator-animated': true\r\n      } }, h(\"div\", { part: \"indicator-background\", class: \"segment-button-indicator-background\" }))));\r\n  }\r\n  get el() { return getElement(this); }\r\n};\r\nSegmentButton.style = {\r\n  ios: segmentButtonIosCss,\r\n  md: segmentButtonMdCss\r\n};\r\n\r\nexport { Segment as ion_segment, SegmentButton as ion_segment_button };\r\n"],"sourceRoot":"webpack:///","file":"31-es5.js"}